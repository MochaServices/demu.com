index.html:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Demu</title>
    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body>
    <header>
        <nav>
            <div class="logo">Demu</div>
            <div class="nav-items">
                <a href="#home">Home</a>
                <a href="#products">Products</a>
                <div class="cart-icon" id="cartIcon">
                    <i class="fas fa-shopping-cart"></i>
                    <span class="cart-count">0</span>
                </div>
            </div>
        </nav>
    </header>

    <main>
        <section class="hero">
            <h1>Welcome to Demu</h1>
            <p>discover not so great products at horrible prices</p>
        </section>

        <section class="products" id="products">
            <h2>Our Products</h2>
            <div class="product-grid" id="productGrid"></div>
        </section>
    </main>

    <div class="cart-modal" id="cartModal">
        <div class="cart-content">
            <div class="cart-header">
                <h3>Your Cart</h3>
                <button class="close-cart">&times;</button>
            </div>
            <div class="cart-items" id="cartItems"></div>
            <div class="cart-footer">
                <div class="cart-total">Total: $<span id="cartTotal">0.00</span></div>
                <button class="checkout-btn">Checkout</button>
            </div>
        </div>
    </div>

    <script src="script.js"></script>
</body>
</html>

style.css:
:root {
    --primary-color: #ff4e00;
    --secondary-color: #ff8533;
    --accent-color: #ff6b00;
    --background-color: #fff9f5;
    --text-color: #333333;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: var(--background-color);
    color: var(--text-color);
}

header {
    background-color: white;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    position: fixed;
    width: 100%;
    top: 0;
    z-index: 1000;
}

nav {
    max-width: 1200px;
    margin: 0 auto;
    padding: 1rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.logo {
    font-size: 1.8rem;
    font-weight: bold;
    color: var(--primary-color);
}

.nav-items {
    display: flex;
    gap: 2rem;
    align-items: center;
}

.nav-items a {
    text-decoration: none;
    color: var(--text-color);
    font-weight: 500;
}

.cart-icon {
    position: relative;
    cursor: pointer;
    font-size: 1.3rem;
}

.cart-count {
    position: absolute;
    top: -8px;
    right: -8px;
    background-color: var(--accent-color);
    color: white;
    border-radius: 50%;
    padding: 0.2rem 0.5rem;
    font-size: 0.8rem;
}

.hero {
    margin-top: 60px;
    padding: 4rem 2rem;
    text-align: center;
    background: linear-gradient(to right, #ff4e00, #ff8533);
    color: white;
}

.hero h1 {
    font-size: 2.8rem;
    margin-bottom: 1rem;
}

.products {
    max-width: 1200px;
    margin: 2rem auto;
    padding: 0 1rem;
}

.products h2 {
    text-align: center;
    margin-bottom: 2rem;
    font-size: 2rem;
    color: var(--primary-color);
}

.product-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 2rem;
}

.product-card {
    background: white;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 2px 15px rgba(0,0,0,0.1);
    transition: transform 0.3s ease;
}

.product-card:hover {
    transform: translateY(-5px);
}

.product-image {
    width: 100%;
    height: 250px;
    object-fit: cover;
}

.product-info {
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    gap: 0.8rem;
}

.product-title {
    font-size: 1.3rem;
    font-weight: 600;
    color: var(--text-color);
}

.product-description {
    color: #666;
    line-height: 1.4;
    font-size: 0.95rem;
}

.product-price {
    color: var(--primary-color);
    font-weight: bold;
    font-size: 1.6rem;
    margin: 0.5rem 0;
}

.add-to-cart {
    width: 100%;
    padding: 1rem;
    background-color: var(--primary-color);
    color: white;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    font-size: 1.1rem;
    font-weight: 600;
    letter-spacing: 0.5px;
    transition: background-color 0.3s ease;
}

.add-to-cart:hover {
    background-color: var(--accent-color);
}

.cart-modal {
    display: none;
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    width: 400px;
    background: white;
    box-shadow: -2px 0 15px rgba(0,0,0,0.1);
    z-index: 1001;
}

.cart-content {
    height: 100%;
    display: flex;
    flex-direction: column;
}

.cart-header {
    padding: 1.5rem;
    border-bottom: 1px solid #eee;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.cart-header h3 {
    font-size: 1.4rem;
    color: var(--primary-color);
}

.close-cart {
    background: none;
    border: none;
    font-size: 1.8rem;
    cursor: pointer;
    color: var(--text-color);
}

.cart-items {
    flex: 1;
    overflow-y: auto;
    padding: 1rem;
}

.cart-item {
    display: flex;
    gap: 1rem;
    padding: 1rem 0;
    border-bottom: 1px solid #eee;
}

.cart-item-image {
    width: 100px;
    height: 100px;
    object-fit: cover;
    border-radius: 8px;
}

.cart-item-details {
    flex: 1;
}

.cart-item-details h4 {
    font-size: 1.1rem;
    margin-bottom: 0.5rem;
}

.remove-item {
    background-color: var(--primary-color);
    color: white;
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 6px;
    cursor: pointer;
    margin-top: 0.5rem;
    transition: background-color 0.3s ease;
}

.remove-item:hover {
    background-color: var(--accent-color);
}

.cart-footer {
    padding: 1.5rem;
    border-top: 1px solid #eee;
    background: white;
}

.cart-total {
    font-size: 1.4rem;
    font-weight: bold;
    margin-bottom: 1rem;
    color: var(--primary-color);
}

.checkout-btn {
    width: 100%;
    padding: 1rem;
    background-color: var(--primary-color);
    color: white;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    font-size: 1.1rem;
    font-weight: 600;
    transition: background-color 0.3s ease;
}

.checkout-btn:hover {
    background-color: var(--accent-color);
}

@media (max-width: 768px) {
    .cart-modal {
        width: 100%;
    }

    .hero h1 {
        font-size: 2rem;
    }
}

script.js:
const products = [
    {
        id: 1,
        name: "Pencil",
        price: 29.99,
        description: "high quality writing utility",
        image: "pencil.jpg"
    },
    {
        id: 2,
        name: "Mug",
        price: 24.99,
        description: "a non broken luxurious and wonderful mug",
        image: "mug.jpg"
    },
    {
        id: 3,
        name: "Robux Card",
        price: 99.99,
        description: "a very legit non overpriced 20 dolla robux card",
        image: "robux-card.png"
    },
    {
        id: 4,
        name: "Broken Toilet Seat",
        price: 124.99,
        description: "a working toilet seat for your toilet",
        image: "brokentoilet.jpg"
    },
    {
        id: 6,
        name: "Iphone 16",
        price: 799.99,
        description: "the latest iphone model",
        image: "iphone16pro.webp"
    },
    {
        id: 7,
        name: "A Kiss",
        price: 999.99,
        description: "you get a kiss",
        image: "akiss.jpg"
    },
    {
        id: 8,
        name: "a note from your dad",
        price: 249.99,
        description: "im proud of you son",
        image: "dadnote.jpg"
    },
    {
        id: 9,
        name: "Unused Socks",
        price: 14.99,
        description: "clean comfy and luxurious socks (100% unused)",
        image: "socks.webp"
    },
    {
        id: 10,
        name: "porta-potty",
        price: 1999.99,
        description: "a wonderful porta potty thats sanitary, comfortable, and of higher quality",
        image: "portapotty.webp"
    }
];

let cart = [];

const productGrid = document.getElementById('productGrid');
const cartIcon = document.getElementById('cartIcon');
const cartModal = document.getElementById('cartModal');
const cartItems = document.getElementById('cartItems');
const cartTotal = document.getElementById('cartTotal');
const closeCart = document.querySelector('.close-cart');
const cartCount = document.querySelector('.cart-count');

function initializeShop() {
    renderProducts();
    setupEventListeners();
    updateCartCount();
}

function renderProducts() {
    productGrid.innerHTML = products.map(product => `
        <div class="product-card">
            <img src="${product.image}" alt="${product.name}" class="product-image">
            <div class="product-info">
                <h3 class="product-title">${product.name}</h3>
                <p class="product-description">${product.description}</p>
                <p class="product-price">$${product.price.toFixed(2)}</p>
                <button class="add-to-cart" data-id="${product.id}">Add to Cart</button>
            </div>
        </div>
    `).join('');
}

function setupEventListeners() {
    cartIcon.addEventListener('click', toggleCart);
    closeCart.addEventListener('click', toggleCart);
    productGrid.addEventListener('click', handleAddToCart);
    cartItems.addEventListener('click', handleRemoveItem);
}

function toggleCart() {
    cartModal.style.display = cartModal.style.display === 'block' ? 'none' : 'block';
}

function handleAddToCart(e) {
    if (e.target.classList.contains('add-to-cart')) {
        const productId = parseInt(e.target.dataset.id);
        addToCart(productId);
    }
}

function handleRemoveItem(e) {
    if (e.target.classList.contains('remove-item')) {
        const productId = parseInt(e.target.dataset.id);
        removeFromCart(productId);
    }
}

function addToCart(productId) {
    const product = products.find(p => p.id === productId);
    const existingItem = cart.find(item => item.id === productId);

    if (existingItem) {
        existingItem.quantity++;
    } else {
        cart.push({ ...product, quantity: 1 });
    }

    updateCart();
}

function removeFromCart(productId) {
    cart = cart.filter(item => item.id !== productId);
    updateCart();
}

function updateCart() {
    renderCartItems();
    updateCartTotal();
    updateCartCount();
}

function renderCartItems() {
    cartItems.innerHTML = cart.map(item => `
        <div class="cart-item">
            <img src="${item.image}" alt="${item.name}" class="cart-item-image">
            <div class="cart-item-details">
                <h4>${item.name}</h4>
                <p>$${item.price.toFixed(2)} x ${item.quantity}</p>
                <button class="remove-item" data-id="${item.id}">Remove</button>
            </div>
        </div>
    `).join('');
}

function updateCartTotal() {
    const total = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
    cartTotal.textContent = total.toFixed(2);
}

function updateCartCount() {
    const count = cart.reduce((sum, item) => sum + item.quantity, 0);
    cartCount.textContent = count;
}

document.addEventListener('DOMContentLoaded', initializeShop);
